datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  goals     Goal[]
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     String[]
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Goal {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  title       String
  todos       Todo[]
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Todo {
  actions     Action[]
  allotedTime Int?
  createdAt   DateTime             @default(now())
  description String?
  end         DateTime?
  goal        Goal?                @relation(fields: [goalId], references: [id])
  goalId      String?
  id          String               @id @default(cuid())
  repeatBasis EnumTodoRepeatBasis?
  repeated    Boolean?
  repetitions Int?
  start       DateTime?
  status      EnumTodoStatus?
  title       String?
  updatedAt   DateTime             @updatedAt
}

model Action {
  createdAt DateTime          @default(now())
  end       DateTime?
  id        String            @id @default(cuid())
  start     DateTime?
  status    EnumActionStatus?
  todo      Todo?             @relation(fields: [todoId], references: [id])
  todoId    String?
  updatedAt DateTime          @updatedAt
}

enum EnumTodoRepeatBasis {
  Daily
  Weekly
  BiWeekly
  Monthly
  BiMonthly
  FirstWeekdayOfMonth
  LastWeekdayOfMonth
}

enum EnumTodoStatus {
  Completed
  InProgress
  Backlog
}

enum EnumActionStatus {
  Completed
  Skipped
}