/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ActionListRelationFilter } from "../../action/base/ActionListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { GoalWhereUniqueInput } from "../../goal/base/GoalWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { EnumTodoRepeatBasis } from "./EnumTodoRepeatBasis";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { EnumTodoStatus } from "./EnumTodoStatus";
@InputType()
class TodoWhereInput {
  @ApiProperty({
    required: false,
    type: () => ActionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ActionListRelationFilter)
  @IsOptional()
  @Field(() => ActionListRelationFilter, {
    nullable: true,
  })
  actions?: ActionListRelationFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  allotedTime?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  end?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => GoalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GoalWhereUniqueInput)
  @IsOptional()
  @Field(() => GoalWhereUniqueInput, {
    nullable: true,
  })
  goal?: GoalWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumTodoRepeatBasis,
  })
  @IsEnum(EnumTodoRepeatBasis)
  @IsOptional()
  @Field(() => EnumTodoRepeatBasis, {
    nullable: true,
  })
  repeatBasis?:
    | "Daily"
    | "Weekly"
    | "BiWeekly"
    | "Monthly"
    | "BiMonthly"
    | "FirstWeekdayOfMonth"
    | "LastWeekdayOfMonth";

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  repeated?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  start?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumTodoStatus,
  })
  @IsEnum(EnumTodoStatus)
  @IsOptional()
  @Field(() => EnumTodoStatus, {
    nullable: true,
  })
  status?: "Completed" | "InProgress" | "Backlog";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  title?: StringNullableFilter;
}
export { TodoWhereInput };
