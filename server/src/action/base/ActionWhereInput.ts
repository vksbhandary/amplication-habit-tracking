/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { EnumActionStatus } from "./EnumActionStatus";
import { TodoWhereUniqueInput } from "../../todo/base/TodoWhereUniqueInput";
@InputType()
class ActionWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  end?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  minutes?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  start?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumActionStatus,
  })
  @IsEnum(EnumActionStatus)
  @IsOptional()
  @Field(() => EnumActionStatus, {
    nullable: true,
  })
  status?: "Completed" | "Skipped";

  @ApiProperty({
    required: false,
    type: () => TodoWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TodoWhereUniqueInput)
  @IsOptional()
  @Field(() => TodoWhereUniqueInput, {
    nullable: true,
  })
  todo?: TodoWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  xp?: IntNullableFilter;
}
export { ActionWhereInput };
